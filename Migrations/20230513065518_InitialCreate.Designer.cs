// <auto-generated />
using System;
using Gaos.Dbo;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace gaos.Migrations
{
    [DbContext(typeof(Db))]
    [Migration("20230513065518_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Gaos.Dbo.BuildVersion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Version")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("BuildVersions");
                });

            modelBuilder.Entity("Gaos.Dbo.Device", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("BuildVersionId")
                        .HasColumnType("int");

                    b.Property<string>("BuildVersionReported")
                        .HasColumnType("longtext");

                    b.Property<string>("Identification")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("PlatformType")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("RegisteredAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("BuildVersionId");

                    b.HasIndex("Identification");

                    b.ToTable("Devices");
                });

            modelBuilder.Entity("Gaos.Dbo.Guest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("DeviceId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<int?>("UserSettingsId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DeviceId");

                    b.HasIndex("UserSettingsId");

                    b.ToTable("Guests");
                });

            modelBuilder.Entity("Gaos.Dbo.GuestName", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("GuestNames");
                });

            modelBuilder.Entity("Gaos.Dbo.JWT", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("DeviceId")
                        .HasColumnType("int");

                    b.Property<int?>("GuestId")
                        .HasColumnType("int");

                    b.Property<string>("Token")
                        .HasColumnType("longtext");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DeviceId");

                    b.HasIndex("GuestId")
                        .IsUnique();

                    b.HasIndex("UserId");

                    b.ToTable("JWTs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Token = "x",
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Token = "x",
                            UserId = 1
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Token = "x",
                            UserId = 2
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Token = "x",
                            UserId = 2
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Token = "x",
                            UserId = 3
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Token = "x",
                            UserId = 3
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Token = "x",
                            UserId = 3
                        });
                });

            modelBuilder.Entity("Gaos.Dbo.Todo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("IsComplete")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Todos");
                });

            modelBuilder.Entity("Gaos.Dbo.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("longtext");

                    b.Property<string>("PasswordSalt")
                        .HasColumnType("longtext");

                    b.Property<int?>("UserSettingsId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex("UserSettingsId")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "karol1@localhost",
                            Name = "karol1",
                            PasswordHash = "karol1"
                        },
                        new
                        {
                            Id = 2,
                            Email = "karol2@localhost",
                            Name = "karol2",
                            PasswordHash = "karol2"
                        },
                        new
                        {
                            Id = 3,
                            Email = "karol3@localhost",
                            Name = "karol3",
                            PasswordHash = "karol3"
                        });
                });

            modelBuilder.Entity("Gaos.Dbo.UserSettings", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AchievementPoints")
                        .HasColumnType("int");

                    b.Property<int>("Battery")
                        .HasColumnType("int");

                    b.Property<int>("Biofuel")
                        .HasColumnType("int");

                    b.Property<float>("Credits")
                        .HasColumnType("float");

                    b.Property<string>("Email")
                        .HasColumnType("longtext");

                    b.Property<int>("Hours")
                        .HasColumnType("int");

                    b.Property<int>("Minutes")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .HasColumnType("longtext");

                    b.Property<string>("Planet0Name")
                        .HasColumnType("longtext");

                    b.Property<int>("Plants")
                        .HasColumnType("int");

                    b.Property<int>("Seconds")
                        .HasColumnType("int");

                    b.Property<string>("ShowItemTypes")
                        .HasColumnType("longtext");

                    b.Property<string>("Username")
                        .HasColumnType("longtext");

                    b.Property<int>("Water")
                        .HasColumnType("int");

                    b.Property<int>("Waterbottle")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("UserSettings");
                });

            modelBuilder.Entity("Gaos.Dbo.Device", b =>
                {
                    b.HasOne("Gaos.Dbo.BuildVersion", "BuildVersion")
                        .WithMany()
                        .HasForeignKey("BuildVersionId");

                    b.Navigation("BuildVersion");
                });

            modelBuilder.Entity("Gaos.Dbo.Guest", b =>
                {
                    b.HasOne("Gaos.Dbo.Device", "Device")
                        .WithMany()
                        .HasForeignKey("DeviceId");

                    b.HasOne("Gaos.Dbo.UserSettings", "UserSettings")
                        .WithMany()
                        .HasForeignKey("UserSettingsId");

                    b.Navigation("Device");

                    b.Navigation("UserSettings");
                });

            modelBuilder.Entity("Gaos.Dbo.JWT", b =>
                {
                    b.HasOne("Gaos.Dbo.Device", "Device")
                        .WithMany()
                        .HasForeignKey("DeviceId");

                    b.HasOne("Gaos.Dbo.Guest", "Guest")
                        .WithOne("JWT")
                        .HasForeignKey("Gaos.Dbo.JWT", "GuestId");

                    b.HasOne("Gaos.Dbo.User", "User")
                        .WithMany("JWTs")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Device");

                    b.Navigation("Guest");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Gaos.Dbo.User", b =>
                {
                    b.HasOne("Gaos.Dbo.UserSettings", "UserSettings")
                        .WithOne("User")
                        .HasForeignKey("Gaos.Dbo.User", "UserSettingsId");

                    b.Navigation("UserSettings");
                });

            modelBuilder.Entity("Gaos.Dbo.Guest", b =>
                {
                    b.Navigation("JWT");
                });

            modelBuilder.Entity("Gaos.Dbo.User", b =>
                {
                    b.Navigation("JWTs");
                });

            modelBuilder.Entity("Gaos.Dbo.UserSettings", b =>
                {
                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
