// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: MessageHeader.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace GaoProtobuf {

  /// <summary>Holder for reflection information generated from MessageHeader.proto</summary>
  public static partial class MessageHeaderReflection {

    #region Descriptor
    /// <summary>File descriptor for MessageHeader.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static MessageHeaderReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChNNZXNzYWdlSGVhZGVyLnByb3RvEgtHYW9Qcm90b2J1ZiKGAQoNTWVzc2Fn",
            "ZUhlYWRlchIOCgZmcm9tSWQYASABKAMSDAoEdG9JZBgCIAEoAxIPCgdncm91",
            "cElkGAMgASgDEg4KBnR5cGVJZBgEIAEoBRITCgtuYW1lc3BhY2VJZBgFIAEo",
            "BRIPCgdjbGFzc0lkGAYgASgFEhAKCG1ldGhvZElkGAcgASgFQg6qAgtHYW9Q",
            "cm90b2J1ZmIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::GaoProtobuf.MessageHeader), global::GaoProtobuf.MessageHeader.Parser, new[]{ "FromId", "ToId", "GroupId", "TypeId", "NamespaceId", "ClassId", "MethodId" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class MessageHeader : pb::IMessage<MessageHeader>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MessageHeader> _parser = new pb::MessageParser<MessageHeader>(() => new MessageHeader());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<MessageHeader> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GaoProtobuf.MessageHeaderReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MessageHeader() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MessageHeader(MessageHeader other) : this() {
      fromId_ = other.fromId_;
      toId_ = other.toId_;
      groupId_ = other.groupId_;
      typeId_ = other.typeId_;
      namespaceId_ = other.namespaceId_;
      classId_ = other.classId_;
      methodId_ = other.methodId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MessageHeader Clone() {
      return new MessageHeader(this);
    }

    /// <summary>Field number for the "fromId" field.</summary>
    public const int FromIdFieldNumber = 1;
    private long fromId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long FromId {
      get { return fromId_; }
      set {
        fromId_ = value;
      }
    }

    /// <summary>Field number for the "toId" field.</summary>
    public const int ToIdFieldNumber = 2;
    private long toId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long ToId {
      get { return toId_; }
      set {
        toId_ = value;
      }
    }

    /// <summary>Field number for the "groupId" field.</summary>
    public const int GroupIdFieldNumber = 3;
    private long groupId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long GroupId {
      get { return groupId_; }
      set {
        groupId_ = value;
      }
    }

    /// <summary>Field number for the "typeId" field.</summary>
    public const int TypeIdFieldNumber = 4;
    private int typeId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int TypeId {
      get { return typeId_; }
      set {
        typeId_ = value;
      }
    }

    /// <summary>Field number for the "namespaceId" field.</summary>
    public const int NamespaceIdFieldNumber = 5;
    private int namespaceId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int NamespaceId {
      get { return namespaceId_; }
      set {
        namespaceId_ = value;
      }
    }

    /// <summary>Field number for the "classId" field.</summary>
    public const int ClassIdFieldNumber = 6;
    private int classId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ClassId {
      get { return classId_; }
      set {
        classId_ = value;
      }
    }

    /// <summary>Field number for the "methodId" field.</summary>
    public const int MethodIdFieldNumber = 7;
    private int methodId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int MethodId {
      get { return methodId_; }
      set {
        methodId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as MessageHeader);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(MessageHeader other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FromId != other.FromId) return false;
      if (ToId != other.ToId) return false;
      if (GroupId != other.GroupId) return false;
      if (TypeId != other.TypeId) return false;
      if (NamespaceId != other.NamespaceId) return false;
      if (ClassId != other.ClassId) return false;
      if (MethodId != other.MethodId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (FromId != 0L) hash ^= FromId.GetHashCode();
      if (ToId != 0L) hash ^= ToId.GetHashCode();
      if (GroupId != 0L) hash ^= GroupId.GetHashCode();
      if (TypeId != 0) hash ^= TypeId.GetHashCode();
      if (NamespaceId != 0) hash ^= NamespaceId.GetHashCode();
      if (ClassId != 0) hash ^= ClassId.GetHashCode();
      if (MethodId != 0) hash ^= MethodId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (FromId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(FromId);
      }
      if (ToId != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(ToId);
      }
      if (GroupId != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(GroupId);
      }
      if (TypeId != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(TypeId);
      }
      if (NamespaceId != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(NamespaceId);
      }
      if (ClassId != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(ClassId);
      }
      if (MethodId != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(MethodId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (FromId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(FromId);
      }
      if (ToId != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(ToId);
      }
      if (GroupId != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(GroupId);
      }
      if (TypeId != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(TypeId);
      }
      if (NamespaceId != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(NamespaceId);
      }
      if (ClassId != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(ClassId);
      }
      if (MethodId != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(MethodId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (FromId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(FromId);
      }
      if (ToId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ToId);
      }
      if (GroupId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(GroupId);
      }
      if (TypeId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TypeId);
      }
      if (NamespaceId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(NamespaceId);
      }
      if (ClassId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ClassId);
      }
      if (MethodId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MethodId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(MessageHeader other) {
      if (other == null) {
        return;
      }
      if (other.FromId != 0L) {
        FromId = other.FromId;
      }
      if (other.ToId != 0L) {
        ToId = other.ToId;
      }
      if (other.GroupId != 0L) {
        GroupId = other.GroupId;
      }
      if (other.TypeId != 0) {
        TypeId = other.TypeId;
      }
      if (other.NamespaceId != 0) {
        NamespaceId = other.NamespaceId;
      }
      if (other.ClassId != 0) {
        ClassId = other.ClassId;
      }
      if (other.MethodId != 0) {
        MethodId = other.MethodId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            FromId = input.ReadInt64();
            break;
          }
          case 16: {
            ToId = input.ReadInt64();
            break;
          }
          case 24: {
            GroupId = input.ReadInt64();
            break;
          }
          case 32: {
            TypeId = input.ReadInt32();
            break;
          }
          case 40: {
            NamespaceId = input.ReadInt32();
            break;
          }
          case 48: {
            ClassId = input.ReadInt32();
            break;
          }
          case 56: {
            MethodId = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            FromId = input.ReadInt64();
            break;
          }
          case 16: {
            ToId = input.ReadInt64();
            break;
          }
          case 24: {
            GroupId = input.ReadInt64();
            break;
          }
          case 32: {
            TypeId = input.ReadInt32();
            break;
          }
          case 40: {
            NamespaceId = input.ReadInt32();
            break;
          }
          case 48: {
            ClassId = input.ReadInt32();
            break;
          }
          case 56: {
            MethodId = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
